{"version":3,"sources":["TabsPage.tsx","App.tsx","index.tsx"],"names":["TabsPage","activeTabId","tabs","activeTab","find","tab","id","className","map","cn","to","title","content","App","match","useMatch","params","tabId","isActive","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAWaA,EAA4B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACjDC,EAAYD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE9C,OACE,qCACE,qBAAKM,UAAU,gBAAf,SACE,6BACGL,EAAKM,KAAI,SAAAH,GACR,IAAQC,EAAOD,EAAPC,GAER,OACE,oBAEE,UAAQ,MACRC,UAAWE,IAAG,CAAE,YAAaR,IAAgBK,IAH/C,SAKE,cAAC,IAAD,CACEI,GAAE,gBAAWJ,GADf,SAGGD,EAAIM,SAPFL,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EACGA,EAAUS,QACV,4BChCNV,EAAO,CACX,CAAEI,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,IAAMC,EAAQC,YAAS,gBACjBd,EAAW,OAAGa,QAAH,IAAGA,OAAH,EAAGA,EAAOE,OAAOC,MAElC,OACE,qCAEE,qBACEV,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAW,gBAAGW,EAAH,EAAGA,SAAH,OACTT,IACE,cACA,CACE,YAAaS,KANrB,kBAaA,cAAC,IAAD,CACER,GAAG,QACHH,UAAW,gBAAGW,EAAH,EAAGA,SAAH,OACTT,IACE,cACA,CACE,YAAaS,KANrB,yBAiBN,qBAAKX,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEY,KAAK,IACLC,QACE,oBAAIb,UAAU,QAAd,yBAGJ,cAAC,IAAD,CACEY,KAAK,QACLC,QACE,cAAC,IAAD,CAAUV,GAAG,IAAIW,SAAO,MAG5B,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CACEG,OAAK,EACLF,QACE,qCACE,oBAAIb,UAAU,QAAd,uBACA,cAAC,EAAD,CACEL,KAAMA,EACND,YAAaA,SAKrB,cAAC,IAAD,CACEkB,KAAK,SACLC,QACE,qCACE,oBAAIb,UAAU,QAAd,uBACA,cAAC,EAAD,CACEL,KAAMA,EACND,YAAaA,YAMvB,cAAC,IAAD,CACEkB,KAAK,IACLC,QACE,oBAAIb,UAAU,QAAd,yCClGhBgB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c60769a6.chunk.js","sourcesContent":["import {\n  Link,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { Tab } from './types/Tab';\n\ntype Props = {\n  activeTabId: string | undefined;\n  tabs: Tab[];\n};\n\nexport const TabsPage: React.FC<Props> = ({ activeTabId, tabs }) => {\n  const activeTab = tabs.find(tab => tab.id === activeTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id } = tab;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={cn({ 'is-active': activeTabId === id })}\n              >\n                <Link\n                  to={`/tabs/${id}`}\n                >\n                  {tab.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTab\n          ? activeTab.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate, NavLink, Route, Routes, useMatch,\n} from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { TabsPage } from './TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const match = useMatch('/tabs/:tabId');\n  const activeTabId = match?.params.tabId;\n\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'is-active': isActive,\n                  },\n                )\n              )}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/tabs\"\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'is-active': isActive,\n                  },\n                )\n              )}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home page</h1>\n              }\n            />\n            <Route\n              path=\"/home\"\n              element={\n                <Navigate to=\"/\" replace />\n              }\n            />\n            <Route path=\"tabs\">\n              <Route\n                index\n                element={(\n                  <>\n                    <h1 className=\"title\">Tabs page</h1>\n                    <TabsPage\n                      tabs={tabs}\n                      activeTabId={activeTabId}\n                    />\n                  </>\n                )}\n              />\n              <Route\n                path=\":tabId\"\n                element={(\n                  <>\n                    <h1 className=\"title\">Tabs page</h1>\n                    <TabsPage\n                      tabs={tabs}\n                      activeTabId={activeTabId}\n                    />\n                  </>\n                )}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}